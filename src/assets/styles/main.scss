// External dependencies
@import '~bootstrap/scss/bootstrap';
@import '~bootswatch/dist/darkly/bootstrap.min';
@import './layout';

button.button.btn-xs.btn {
  padding: 0.0rem 0.4rem;
  position: relative;
  top: -0.08rem;
}

.nobr {
  white-space: nowrap;
}

.inline {
  display: inline-block;
}

.relative {
  position: relative;
}

span.react-numeric-input input {
  max-width: 6.1rem;
}

$inc-dec-bg: #eee;
$inc-dec-color: #000;

.NumCell {
  display: inline-block;
  padding: 0.01rem;
  span.react-numeric-input input, span.sum {
    width: 6.1rem;
  }
  span.sum {
    display: inline-block;
  }
}

$troopCountColor:  rgb(65, 179, 255);
$troopPercentColor:  rgb(255, 174, 53);
$lighter1: +10%;
$lighter2: +18%;
$lighter3: +26%;

$troopDefSpace: 1rem;

.TroopDefView {
  margin-bottom: 0.5rem;
  label {
    text-align: left;
    min-width: 4rem;
    margin: 0 $troopDefSpace 0 0;
  }

  .TroopCount {
    margin-right: $troopDefSpace;
    input {
      &.Infantry { background-color: adjust-color($troopCountColor, $lightness: $lighter1); }
      &.Cavalry { background-color: adjust-color($troopCountColor, $lightness: $lighter2); }
      &.Distance { background-color: adjust-color($troopCountColor, $lightness: $lighter3); }
    }
  }
  .TroopPercent {
    margin-right: $troopDefSpace;
    input {
      &.Infantry { background-color: adjust-color($troopPercentColor, $lightness: $lighter1); }
      &.Cavalry { background-color: adjust-color($troopPercentColor, $lightness: $lighter2); }
      &.Distance { background-color: adjust-color($troopPercentColor, $lightness: $lighter3); }
    }
  }
}

.TierDefView {
  & > div {
    text-align: left;
  }
  .TierProps {
    text-align: left;
    label {
      width: 6rem;
    }
  }
  padding: 1rem 0;
  &.even {
    background-color: rgba(255,255,255,0.08)
  }
  label.tierLabel {
    font-size: 4em;
  }
}

.FormCalcView {
  fieldset {
    margin-bottom: 1rem;
  }
}

$icon-ok: rgb(108, 128, 243);
$icon-green: rgb(142, 211, 142);
$icon-red: rgb(187, 102, 102);
$icon-unlocked: rgb(100, 223, 100);
$icon-action: rgb(250, 234, 90);
.LockState {
  cursor: pointer;
  margin: 0 0.4rem 0 0 ;
  &.locked {
    color: $icon-red;
  }
  &.unlocked {
    color: $icon-unlocked;
  }
}

.PercentDelta {
  margin: 0 0.3rem 0 0 ;
  &.delta {
    color: $icon-action;
    cursor: pointer;
  }
  &.no-delta {
    color: $icon-ok;
  }
}

@include media-breakpoint-down(xs) {
  span.react-numeric-input input, span.sum {
    max-width: 8rem;
  }
  .NumCell {
    display: inline-block;
    padding: 0.01rem;
    span.react-numeric-input input, span.sum {
      width: 8rem;
    }
  }
}
